<idea-plugin>
    <!-- Adapted from https://github.com/redhat-developer/intellij-quarkus/blob/2585eb422beeb69631076d2c39196d6eca2f5f2e/src/main/resources/META-INF/lsp.xml -->
    <extensionPoints>
        <extensionPoint name="server"
                        beanClass="com.langserver.devtools.intellij.lsp4mp.lsp4ij.ServerExtensionPointBean"/>
        <extensionPoint name="languageMapping"
                        beanClass="com.langserver.devtools.intellij.lsp4mp.lsp4ij.LanguageMappingExtensionPointBean"/>
    </extensionPoints>
    <extensions defaultExtensionNs="open-liberty.intellij">
        <!-- MicroProfile LS -->
        <server id="lsp4mp" class="com.langserver.devtools.intellij.lsp4mp.lsp.MicroProfileServer"
                clientImpl="com.langserver.devtools.intellij.lsp4mp.lsp.MicroProfileLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="MicroProfileConfigProperties" serverId="lsp4mp"/>
        <languageMapping language="JAVA" serverId="lsp4mp"/>

        <!-- LemMinX LS with Liberty LemMinX ext -->
        <!-- TODO changing the server interface to org.eclipse.lemminx.customservice.XMLLanguageClientAPI results in class cast exception -->
        <server id="libertyXml" class="com.langserver.devtools.intellij.liberty.lsp.LibertyXmlServer"
                clientImpl="com.langserver.devtools.intellij.liberty.lsp.LibertyXmlLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="XML" serverId="libertyXml"/>

        <!-- Liberty LS -->
        <server id="libertyls" class="com.langserver.devtools.intellij.liberty.lsp.LibertyLanguageServer"
                clientImpl="com.langserver.devtools.intellij.liberty.lsp.LibertyLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="BootstrapProperties" serverId="libertyls"/>
        <languageMapping language="ServerEnv" serverId="libertyls"/>
    </extensions>
    <extensions defaultExtensionNs="com.intellij">
        <!-- File types for language server activation -->
        <!-- microprofile-config.properties for LSP4MP -->
        <fileType name="microprofile-config.properties file"
                  implementationClass="com.langserver.devtools.intellij.lsp4mp.lsp.MicroProfileConfigFileType"
                  fieldName="INSTANCE"
                  patterns="microprofile-config.properties;microprofile-config-?*.properties"/>

        <!-- bootstrap.properties for Liberty LS -->
        <fileType name="bootstrap.properties file"
                  implementationClass="com.langserver.devtools.intellij.liberty.lsp.BootstrapPropertiesFileType"
                  fieldName="INSTANCE"
                  fileNames="bootstrap.properties" /> <!-- FIXME this will start the Liberty LS on any bootstrap.properties files, not just src/main/liberty/config/bootstrap.properties -->

        <!-- server.env for Liberty LS -->
        <fileType name="server.env file"
                  implementationClass="com.langserver.devtools.intellij.liberty.lsp.ServerEnvFileType"
                  fieldName="INSTANCE"
                  language="ServerEnv"
                  fileNames="server.env" /> <!-- FIXME this will start the Liberty LS on any server.env files, not just src/main/liberty/config/server.env -->

        <!-- Generic -->
        <completion.contributor id="LSPCompletionContributor" language="any"
                                implementationClass="com.langserver.devtools.intellij.lsp4mp.lsp4ij.operations.completion.LSContentAssistProcessor"
                                order="first"/>
        <inspectionToolProvider
                implementation="com.langserver.devtools.intellij.lsp4mp.lsp4ij.operations.diagnostics.LSPInspectionToolProvider"/>
        <projectService serviceImplementation="com.langserver.devtools.intellij.lsp4mp.lsp4ij.LanguageServiceAccessor"/>
        <gotoDeclarationHandler
                implementation="com.langserver.devtools.intellij.lsp4mp.lsp4ij.operations.navigation.LSPGotoDeclarationHandler"/>

        <!-- MicroProfile -->
        <lang.documentationProvider id="LSPTextHoverProperties" language="Properties"
                                    implementationClass="com.langserver.devtools.intellij.lsp4mp.lsp4ij.operations.hover.LSPTextHover"
                                    order="first"/>
        <lang.documentationProvider id="LSPTextHoverJAVA" language="JAVA"
                                    implementationClass="com.langserver.devtools.intellij.lsp4mp.lsp4ij.operations.hover.LSPTextHover"
                                    order="first"/>
        <codeInsight.inlayProvider language="JAVA"
                                   implementationClass="com.langserver.devtools.intellij.lsp4mp.lsp4ij.operations.codelens.LSPInlayProvider"/>
    </extensions>

    <project-components>
        <component>
            <implementation-class>
                com.langserver.devtools.intellij.lsp4mp.lsp4ij.ConnectDocumentToLanguageServerSetupParticipant
            </implementation-class>
        </component>
    </project-components>

</idea-plugin>